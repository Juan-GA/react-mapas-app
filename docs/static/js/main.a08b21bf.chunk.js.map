{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","hooks/useMapbox.js","pages/MapaPage.js","MapasApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","mapboxgl","accessToken","puntoInicial","lng","lat","zoom","MapaPage","mapaDiv","useRef","setRef","useCallback","node","current","marcadores","movimientoMarcador","Subject","nuevoMarcador","mapa","coords","setCoords","agregarMarcador","ev","id","lngLat","marker","Marker","v4","setLngLat","addTo","setDraggable","next","target","getLngLat","actualizarPosicion","map","Map","container","style","center","getCenter","toFixed","getZoom","nuevoMarcador$","movimientoMarcador$","useMapbox","useContext","Object","keys","key","subscribe","marcador","emit","className","ref","MapasApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a08b21bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createContext } from 'react';\r\nimport { useSocket } from '../hooks/useSocket'\r\n\r\nexport const SocketContext = createContext();\r\n\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { socket, online } = useSocket('https://react-socket-mapas.herokuapp.com/');\r\n    \r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}","import { useEffect, useMemo, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n    \r\n    const socket = useMemo(() => io.connect( serverPath, {transports: ['websocket']} ), [ serverPath ] );\r\n    const [ online, setOnline ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setOnline( socket.connected );\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('connect', () => setOnline( true ));\r\n    }, [ socket ])\r\n\r\n    useEffect(() => {\r\n        socket.on('disconnect', () => setOnline( false ));\r\n    }, [ socket ])\r\n\r\n    return {\r\n        socket,\r\n        online\r\n    }\r\n}","import { useCallback, useEffect, useRef, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport { v4 } from 'uuid';\r\nimport { Subject } from 'rxjs';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoianVhbi1nYSIsImEiOiJja3N4bDMwc28wZ216Mm5tc2FpZTNocjF3In0.hcGJX1BZIbbA6RtQ4WUypA';\r\n\r\nexport const useMapbox = ( puntoInicial ) => {\r\n\r\n    // Referencia al div del mapa\r\n    const mapaDiv = useRef();\r\n    const setRef = useCallback( (node) => {\r\n        mapaDiv.current = node;\r\n    }, [])\r\n\r\n    // Referencia a los marcadores\r\n    const marcadores = useRef({});\r\n\r\n    // Observables de Rxjs\r\n    const movimientoMarcador = useRef( new Subject() );\r\n    const nuevoMarcador = useRef( new Subject() );\r\n\r\n    // Mapa y coords\r\n    const mapa = useRef();\r\n    const [ coords, setCoords ] = useState( puntoInicial );\r\n\r\n    // Función para crear marcadores\r\n    const agregarMarcador = useCallback( (ev, id) => {\r\n            \r\n            const { lng, lat } = ev.lngLat || ev;\r\n\r\n            const marker = new mapboxgl.Marker();\r\n            marker.id = id ?? v4();\r\n\r\n            marker\r\n                .setLngLat([ lng, lat ])\r\n                .addTo( mapa.current )\r\n                .setDraggable( true );\r\n\r\n            // Asignamos al objeto de marcadores\r\n            marcadores.current[ marker.id ] = marker;\r\n\r\n            if ( !id ) {\r\n                nuevoMarcador.current.next({\r\n                    id: marker.id,\r\n                    lng,\r\n                    lat\r\n                });\r\n            }\r\n\r\n            // Escuchar movimientos del marcador\r\n            marker.on('drag', ({ target }) => {\r\n                const { id } = target;\r\n                const { lng, lat } = target.getLngLat();\r\n                movimientoMarcador.current.next({ id, lng, lat });\r\n            });\r\n\r\n    }, []);\r\n\r\n    const actualizarPosicion = useCallback( ({ id, lng, lat }) => {\r\n\r\n        marcadores.current[id].setLngLat([ lng, lat ]);\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapaDiv.current,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [ puntoInicial.lng, puntoInicial.lat ],\r\n            zoom: puntoInicial.zoom\r\n            });\r\n        mapa.current = map;\r\n    }, [ puntoInicial ]);\r\n\r\n    // Cuando se mueve el mapa\r\n    useEffect(() => {\r\n        \r\n        mapa.current?.on('move', () => {\r\n            const { lng, lat } = mapa.current.getCenter();\r\n            setCoords({\r\n                lng: lng.toFixed(4),\r\n                lat: lat.toFixed(4),\r\n                zoom: mapa.current.getZoom().toFixed(2)\r\n            })\r\n        });\r\n\r\n    }, []);\r\n\r\n    // Agregar marcadores cuándo hago click\r\n    useEffect(() => {\r\n        \r\n        mapa?.current.on('click', agregarMarcador );\r\n\r\n    }, [ agregarMarcador ]);\r\n\r\n    return {\r\n        actualizarPosicion,\r\n        agregarMarcador,\r\n        coords,\r\n        marcadores,\r\n        nuevoMarcador$: nuevoMarcador.current,\r\n        movimientoMarcador$: movimientoMarcador.current,\r\n        setRef\r\n    }\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { SocketContext } from '../context/SocketContext';\r\nimport { useMapbox } from '../hooks/useMapbox';\r\n\r\nconst puntoInicial = {\r\n    lng: -96.9282,\r\n    lat: 19.5289,\r\n    zoom: 13.57\r\n}\r\n\r\nexport const MapaPage = () => {\r\n\r\n    const { setRef, coords, nuevoMarcador$, movimientoMarcador$, agregarMarcador, actualizarPosicion } = useMapbox( puntoInicial );\r\n    const { socket } = useContext( SocketContext )\r\n\r\n    useEffect(() => {\r\n        \r\n        socket.on('marcadores-activos', ( marcadores ) => {\r\n            for ( const key of Object.keys( marcadores ) ) {\r\n                agregarMarcador(marcadores[key],key);\r\n            }\r\n        });\r\n\r\n    }, [ socket, agregarMarcador ]);\r\n\r\n    useEffect(() => {\r\n        \r\n        nuevoMarcador$.subscribe( marcador => {\r\n            socket.emit('marcador-nuevo', marcador );\r\n        });\r\n\r\n    }, [ nuevoMarcador$, socket ]);\r\n\r\n    useEffect(() => {\r\n        \r\n        movimientoMarcador$.subscribe( marcador => {\r\n            socket.emit('marcador-actualizado', marcador );\r\n        });\r\n\r\n    }, [ socket, movimientoMarcador$ ]);\r\n\r\n    useEffect(() => {\r\n        \r\n        socket.on('marcador-actualizado', ( marcador ) => {\r\n            actualizarPosicion( marcador );\r\n        });\r\n\r\n    }, [ socket, actualizarPosicion ]);\r\n\r\n    useEffect(() => {\r\n        socket.on('marcador-nuevo', ( marcador ) => {\r\n            agregarMarcador( marcador, marcador.id );\r\n        });\r\n    }, [ socket, agregarMarcador ]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"info\">\r\n                lng: { coords.lng } | lat: { coords.lat } | zoom: { coords.zoom }\r\n            </div>\r\n\r\n            <div\r\n                ref={ setRef }\r\n                className=\"mapContainer\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SocketProvider } from './context/SocketContext'\r\nimport { MapaPage } from './pages/MapaPage'\r\n\r\nexport const MapasApp = () => {\r\n    return (\r\n        <SocketProvider>\r\n            <MapaPage/>\r\n        </SocketProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { MapasApp } from './MapasApp';\n\nReactDOM.render(\n    <MapasApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}